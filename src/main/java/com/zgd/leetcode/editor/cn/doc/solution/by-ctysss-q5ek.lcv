以最终变换的值作为横坐标，总cost作为纵坐标，曲线是凹形的，所以我们可以二分渐进得到最优的解

* 

```
class Solution {
    public long minCost(int[] nums, int[] cost) {
        int l = 0 , r = 1000010;
        while(l < r){
            int mid = (l+r)>>1;
            //每次取mid和mid+1对应的总cost，如果前者总cost小于后者，说明最优解在左边，如果大于，则在右边
            long cost1 = getCost(nums , cost , mid);
            long cost2 = getCost(nums , cost , mid+1);
            if(cost1 < cost2){
                r = mid;
            }else{
                l = mid+1;
            }
        }
        return getCost(nums , cost , l);
    }
    long getCost(int[] nums , int[] cost , int t){
        long ret = 0;
        for(int i = 0 ; i < nums.length ; i++){
            ret += 1L*Math.abs(nums[i] - t) * cost[i];
        }
        return ret;
    }
}
```

