比赛胡乱写了个方法暴力搜寻收紧值，复杂度O(nlogn+Clogn),其中C为nums最大最小值的差值

* []

```Java
class Solution {
    public long minCost(int[] nums, int[] cost) {
        int n=nums.length;
        int arr[][]=new int[n][];
        for(int i=0;i<n;i++){
            arr[i]=new int[]{nums[i],cost[i]};
        }
        Arrays.sort(arr,(a,b)->a[0]-b[0]);
        long preSum1[]=new long[n+1];
        long preSum2[]=new long[n+2];
        
        for(int i=1;i<=n;i++){
            preSum1[i]=preSum1[i-1]+(long)arr[i-1][0]*arr[i-1][1];
        }
        
        for(int i=1;i<=n;i++){
            preSum2[i]=preSum2[i-1]+arr[i-1][1];
        }
        
        long ans=(long)arr[n-1][0]*preSum2[n]-preSum1[n];
        for(int i=arr[0][0];i<arr[n-1][0];i++){
            int l=0,r=n-1;
            while(l<r){
                int mid=(l+r)>>1;
                if(arr[mid][0]>=i){
                    r=mid;
                }
                else{
                    l=mid+1;
                }
                if(l==r-1){
                    if(arr[l][0]>=i){
                        r=l;
                    }
                    break;
                }
            }
            //从0到l-1是增加，从l是减少；
            long a=preSum1[n]-preSum1[r]-(preSum2[n]-preSum2[r])*i;
            long b=preSum2[r]*i-preSum1[r];
            ans=Math.min(ans,a+b);
        }
        return ans;
    }
}
```

